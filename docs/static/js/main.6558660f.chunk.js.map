{"version":3,"sources":["logo.svg","components/Loading/loading.svg","components/Intro/index.js","components/SeriesList/index.js","components/Loading/loading.js","containers/Series/index.js","containers/SingleSeries/index.js","components/Main/index.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Intro","props","react_default","a","createElement","className","message","SeriesListItem","_ref","series","Link","to","concat","show","id","name","summary","trim","dangerouslySetInnerHTML","__html","substr","SeriesList","list","map","SeriesList_SeriesListItem","key","Loading","src","logo","alt","Component","Series","state","seriesName","isFetching","onSeriesInputChange","e","_this","setState","target","value","fetch","then","response","json","data","_this$state","this","components_Intro","type","onChange","placeholder","length","components_Loading_loading","src_components_SeriesList","SingleSeries","_this2","match","params","catch","console","log","href","image","original","medium","language","premiered","status","genres","join","url","Main","Switch","Route","exact","path","component","App","components_Main","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6558660f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7dbe1adc.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.afdb8fab.svg\";","import React from 'react';\n\nconst Intro = props =>(\n  <p className=\"App-intro\">\n    {props.message}\n  </p>\n);\n\nexport default Intro;","import React from 'react';\nimport './index.css';\nimport {Link} from 'react-router-dom';\n\nconst SeriesListItem = ({series}) => {\n  return (\n  <div className=\"result-item\">\n    <Link to={`series/${series.show.id}`} className=\"item-link\">\n      <li className=\"result-item-title\">{series.show.name}</li>\n    </Link>\n    {\n      series.show.summary === null || series.show.summary.trim() === ''\n    }\n    {\n      series.show.summary !== null\n      &&\n      <div dangerouslySetInnerHTML={{ __html: series.show.summary.substr(0,100)+\"..\" }} className=\"result-item-brief\"></div>\n    }\n  </div>\n  );\n};\n\nconst SeriesList = props => {\n  return(\n    <div>\n      <ul className=\"series-list\">\n        {props.list.map(series => (\n          <SeriesListItem key={series.show.id} series={series} />\n          ))}\n      </ul>\n    </div>\n  )\n};\n\nexport default SeriesList;","import React,{Component} from 'react';\nimport logo from './loading.svg';\nimport './loading.css';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <img src={logo} className=\"loading\" alt=\"logo\" />\n    );\n  }\n}\n\nexport default Loading;","import React, {Component} from 'react';\nimport Intro from '../../components/Intro';\nimport SeriesList from '../../components/SeriesList';\nimport './series.css';\nimport Loading from '../../components/Loading/loading.js';\n\nclass Series extends Component {\n  state = {\n    series: [],\n    seriesName:'',\n    isFetching:false\n  }\n\n  onSeriesInputChange = e => {\n    this.setState({seriesName:e.target.value, isFetching:true});\n    fetch(\"http://api.tvmaze.com/search/shows?q=\"+e.target.value)\n      .then(response => response.json())\n      .then(data => {this.setState({series:data, isFetching:false});});\n  }\n\n  render() {\n    const {series,seriesName,isFetching} = this.state;\n\n    return(\n      <div>\n        <Intro message=\"Here you can find all tv series and web series!\" />\n        {/* We have total of {series.length} series!! */}\n        <div>\n          <input\n          value={seriesName}\n          type=\"text\"\n          onChange={this.onSeriesInputChange}\n          placeholder=\"Search here...\"\n          className=\"search-box\"\n          />\n        </div>\n        {\n          series.length === 0 && seriesName.trim() === ''\n          &&\n          <p>Enter a series..</p>\n        }\n        {\n          !isFetching && series.length === 0 && seriesName.trim() !== ''\n          &&\n          <p>No TV series found</p>\n        }\n        {\n          isFetching\n          &&\n          <Loading />\n        }\n        {\n          !isFetching\n          &&\n          <SeriesList list={series} />\n        }\n      </div>\n    )\n  }\n}\n\nexport default Series;","import React, {Component} from 'react';\nimport './index.css';\nimport Loading from '../../components/Loading/loading.js';\nimport {Link} from 'react-router-dom';\n\nclass SingleSeries extends Component {\n\n  state = {\n    show:null\n  };\n\n  componentDidMount() {\n    const {id} = this.props.match.params;\n    fetch(\"http://api.tvmaze.com/shows/\"+id+\"?embed=episodes\")\n      .then(response => response.json())\n      .then(data => {this.setState({show:data})})\n      .catch(e=>{\n        console.log(e);\n      });\n  }\n\n  render() {\n    const {show} = this.state;\n    console.log(show);\n    return (\n      <div>\n        {show === null && <Loading />}\n        {show !== null\n          &&\n          <div>\n            <h1>{show.name}</h1>\n            <div className=\"wrapper\">\n              <div className=\"grid-item\">\n                <a href={show.image.original}><img className=\"show-art\" src={show.image.medium} alt=\"Show art\" /></a>\n              </div>\n              <div className=\"grid-item\">\n              <p dangerouslySetInnerHTML={{ __html: show.summary }} className='show-info'></p>\n                <ul className=\"info-list\">\n                  <li><b>Name</b> : {show.name}</li>\n                  <li><b>Language</b> : {show.language}</li>\n                  <li><b>Premiered</b> : {show.premiered}</li>\n                  <li><b>Status</b> : {show.status}</li>\n                  <li><b>Genre</b> : {show.genres.join(' | ')}</li>\n                </ul>\n              </div>\n            </div>\n            Show id : <a href={show.url}>{this.props.match.params.id}</a>\n          </div>\n        }\n        <br />\n        <Link to={`/`} className=\"test\">\n          &larr; Go back to search\n        </Link>\n        <br /><br />\n      </div>\n    );\n  }\n}\n\nexport default SingleSeries;","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Series from '../../containers/Series';\nimport SingleSeries from '../../containers/SingleSeries';\n\nconst Main = props =>(\n  <Switch>\n    <Route exact path='/' component={Series}/>\n    <Route exact path='/series/:id' component={SingleSeries}/>\n  </Switch>\n);\n\nexport default Main;","import React, { Component } from 'react';\nimport logo from '../../logo.svg';\nimport './App.css';\nimport Main from '../Main';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">FLiX search</h1>\n        </header>\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter><App /></BrowserRouter>,\n  document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}